<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.stazxr.zblog.mapper.ArticleMapper">
    <resultMap id="articleVoListMap" type="com.github.stazxr.zblog.domain.vo.ArticleVo">
        <result property="id" column="ID" />
        <result property="title" column="TITLE" />
        <result property="articleType" column="ARTICLE_TYPE" />
        <result property="categoryName" column="CATEGORY_NAME" />
        <result property="articleStatus" column="ARTICLE_STATUS" />
        <result property="viewCount" column="VIEW_COUNT" />
        <result property="likeCount" column="LIKE_COUNT" />
        <result property="authorId" column="LIKE_COUNT" />
        <result property="authorNickname" column="AUTHOR_NICKNAME" />
        <result property="createTime" column="CREATE_TIME" />
        <result property="updateTime" column="UPDATE_TIME" />
        <result property="articlePerm" column="ARTICLE_PERM" />
        <result property="commentFlag" column="COMMENT_FLAG" />
        <collection property="tagList" ofType="com.github.stazxr.zblog.domain.vo.ArticleTagVo">
            <result property="id" column="TAG_ID" />
            <result property="name" column="TAG_NAME" />
            <result property="type" column="TAG_TYPE" />
        </collection>
    </resultMap>

    <update id="updateArticleStatus">
        UPDATE article SET ARTICLE_STATUS = #{status} WHERE ID = #{articleId}
    </update>

    <select id="selectArticleList" resultMap="articleVoListMap">
        SELECT
            temp.ID, temp.TITLE, temp.ARTICLE_TYPE, temp.ARTICLE_STATUS, temp.ARTICLE_PERM, temp.COMMENT_FLAG,
            temp.CREATE_TIME, temp.UPDATE_TIME, c.NAME CATEGORY_NAME, u.NICKNAME AUTHOR_NICKNAME,
            tag.ID TAG_ID, tag.NAME TAG_NAME, tag.TYPE TAG_TYPE,
            (SELECT COUNT(1) FROM article_view_recode WHERE ARTICLE_ID = temp.ID) VIEW_COUNT,
            (SELECT COUNT(1) FROM article_like_recode WHERE ARTICLE_ID = temp.ID) LIKE_COUNT
        FROM (
            SELECT
                ID, TITLE, REMARK, CONTENT, KEYWORDS, REPRINT_LINK, REPRINT_DESC,
                COVER_IMAGE_TYPE, ARTICLE_TYPE, ARTICLE_STATUS, ARTICLE_PERM, CATEGORY_ID, AUTHOR_ID, COMMENT_FLAG,
                CREATE_USER, CREATE_TIME, UPDATE_USER, UPDATE_TIME
            FROM
                article
            WHERE DELETED = 0 AND ARTICLE_PERM IN (1, 2)
            UNION ALL
            SELECT
                ID, TITLE, REMARK, CONTENT, KEYWORDS, REPRINT_LINK, REPRINT_DESC,
                COVER_IMAGE_TYPE, ARTICLE_TYPE, ARTICLE_STATUS, ARTICLE_PERM, CATEGORY_ID, AUTHOR_ID, COMMENT_FLAG,
                CREATE_USER, CREATE_TIME, UPDATE_USER, UPDATE_TIME
            FROM
                article
            WHERE DELETED = 0 AND ARTICLE_PERM = 3 AND AUTHOR_ID IN (
                SELECT ID FROM user WHERE USERNAME = #{loginUser}
            )
        ) temp
        LEFT JOIN article_category c ON c.ID = temp.CATEGORY_ID
        LEFT JOIN (
            SELECT ata.ID, ata.NAME, ata.TYPE, atr.ARTICLE_ID FROM article_tag_relation atr LEFT JOIN article_tag ata ON ata.ID = atr.TAG_ID
        ) tag ON tag.ARTICLE_ID = temp.ID
        LEFT JOIN user u ON u.ID = temp.AUTHOR_ID
        <where>
            <if test="title != null and title != ''">
                <bind name="titleBind" value="'%' + title + '%'"/>
                AND temp.TITLE LIKE #{titleBind}
            </if>
            <if test="articleStatus != null">
                AND temp.ARTICLE_STATUS = #{articleStatus}
            </if>
            <if test="author != null and author != ''">
                <bind name="authorBind" value="'%' + author + '%'"/>
                AND temp.AUTHOR_ID IN (
                    SELECT ID FROM user WHERE USERNAME LIKE #{authorBind} OR NICKNAME LIKE #{authorBind}
                )
            </if>
        </where>
    </select>

    <select id="selectArticleDetail" resultType="com.github.stazxr.zblog.domain.vo.ArticleVo">
        SELECT
            a.ID, a.TITLE, a.REMARK, a.CONTENT, a.KEYWORDS, a.REPRINT_LINK, a.REPRINT_DESC,
            a.COVER_IMAGE_TYPE, a.ARTICLE_TYPE, a.ARTICLE_STATUS, a.ARTICLE_PERM, a.CATEGORY_ID, a.AUTHOR_ID, a.COMMENT_FLAG,
            a.CREATE_USER, a.CREATE_TIME, a.UPDATE_USER, a.UPDATE_TIME
        FROM
            article a
        LEFT JOIN user u ON u.ID = a.AUTHOR_ID
        WHERE a.DELETED = 0 AND a.ID = #{articleId}
    </select>
</mapper>
