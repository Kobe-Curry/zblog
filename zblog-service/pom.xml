<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.github.stazxr.zblog</groupId>
        <artifactId>zblog-parent</artifactId>
        <version>4.0.0</version>
    </parent>

    <artifactId>zblog-service</artifactId>
    <packaging>jar</packaging>

    <name>zblog-service</name>
    <description>ZBLOG 框架的业务组件</description>

    <properties>
        <mainClass>com.github.stazxr.zblog.ZblogApplication</mainClass>
    </properties>

    <dependencies>
        <!-- Zblog Base -->
        <dependency>
            <groupId>com.github.stazxr.zblog</groupId>
            <artifactId>zblog-base</artifactId>
            <version>${zblog.version}</version>
        </dependency>
        <!-- Springboot Configuration -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- jasypt -->
        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>zblog</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <archive>
                        <!-- 生成的jar中，包含pom.xml和pom.properties这两个文件 -->
                        <addMavenDescriptor>true</addMavenDescriptor>
                        <!-- 生成MANIFEST.MF的设置 -->
                        <manifest>
                            <!-- 打包时MANIFEST.MF文件不记录时间戳版本 -->
                            <useUniqueVersions>false</useUniqueVersions>
                            <!-- 为依赖包添加路径, 这些路径会写在MANIFEST.MF文件的Class-Path下 -->
                            <addClasspath>true</addClasspath>
                            <!-- 这个jar所依赖的jar包添加classPath的时候的前缀，如果这个jar本身和依赖包在同一级目录，则不需要添加 -->
                            <classpathPrefix>libs/</classpathPrefix>
                            <!-- jar启动入口类 -->
                            <mainClass>${mainClass}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/libs
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-maven-plugin</artifactId>
                <version>3.0.3</version>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <activeProfile>dev</activeProfile>
                <desc>开发环境，开启SQL等日志信息，使用本地的链接信息</desc>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>alpha</id>
            <properties>
                <activeProfile>alpha</activeProfile>
                <desc>测试环境，关闭SQL等日志信息，使用本地的链接信息</desc>
            </properties>
        </profile>
        <profile>
            <id>beta</id>
            <properties>
                <activeProfile>beta</activeProfile>
                <desc>回归环境，关闭SQL等日志信息，数据库使用生产的，Redis使用本地的</desc>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <activeProfile>prod</activeProfile>
                <desc>生产环境，关闭SQL等日志信息，使用生产的链接信息</desc>
            </properties>
        </profile>
    </profiles>
</project>
